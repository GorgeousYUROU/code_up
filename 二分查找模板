//查找有序序列算法模板(寻找第一个满足条件的元素的位置)  look(0,n,key)
//二分区间为(left,right]
int look(int left,int right,int key)
{
	int mid;
	while(left+1<right)  //若是查找在数组中的元素，条件为<=，退出符合元素不存在的条件
	//若是没有不存在，那么当left=right时刚好为正确答案 二分下界为n，因为存在大于最后一个数
	//的位置是n
	{
		mid = (left + right/2);
		if(A[mid]==key) return mid;
		if(条件成立)
		{
			right = mid-1; 
		}
		else left = mid+1;
	}
	//return -1; //查找失败返回-1
}


🌰：查找第一个大于等于key的元素位置
int look(int left,int right,int key)
{
	int mid;
	while(left<right)  //若是查找在数组中的元素，条件为<=
	{
		mid = (left + right/2);
		
		if(A[mid]>=key)
		{
			right = mid; 
		}
		else left = mid+1;
	}
	return left; 
}
